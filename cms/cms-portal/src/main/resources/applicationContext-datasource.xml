<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">

        <property name="dataSource" ref="dataSource"/>

        <property name="mapperLocations">
            <array>
                <value>classpath*:com/cms/dao/mapper/mappers/**.xml</value>
            </array>
        </property>

        <property name="configuration">
            <bean class="org.apache.ibatis.session.Configuration">
                <property name="mapUnderscoreToCamelCase" value="true"/>
                <property name="defaultStatementTimeout" value="25000"/>
                <property name="cacheEnabled" value="true"/>
                <property name="aggressiveLazyLoading" value="false"/>
                <property name="lazyLoadTriggerMethods" value=""/>
            </bean>

        </property>

    </bean>

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">

        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>

        <property name="initialSize" value="${datasource.initialSize}"/>
        <property name="minIdle" value="${datasource.minIdle}"/>
        <property name="maxActive" value="${datasource.maxActive}"/>

        <property name="maxWait" value="${datasource.maxWait}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${datasource.timeBetweenEvictionRunsMillis}"/>

        <property name="validationQuery" value="${datasource.validationQuery}"/>
        <property name="minEvictableIdleTimeMillis" value="${datasource.minEvictableIdleTimeMillis}"/>
        <property name="testWhileIdle" value="${datasource.testWhileIdle}"/>
        <property name="testOnBorrow" value="${datasource.testOnBorrow}"/>
        <property name="testOnReturn" value="${datasource.testOnReturn}"/>
        <property name="poolPreparedStatements" value="${datasource.poolPreparedStatements}"/>
        <property name="maxPoolPreparedStatementPerConnectionSize"
                  value="${datasource.maxPoolPreparedStatementPerConnectionSize}"/>
       <property name="filters" value="${datasource.filters}"/>
        <property name="connectionProperties" value="${datasource.connectionProperties}"/>
        <property name="useGlobalDataSourceStat" value="${datasource.useGlobalDataSourceStat}"/>

        <property name="proxyFilters">
            <list>
                <ref bean="stat-filter"/>
            </list>
        </property>
    </bean>

    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.cms.dao.mapper"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
        <property name="rollbackOnCommitFailure" value="true"/>

    </bean>

    <tx:annotation-driven proxy-target-class="true"/>

    <bean id="flyway" class="org.flywaydb.core.Flyway" init-method="migrate" depends-on="dataSource">
        <property name="dataSource" ref="dataSource"/>
        <property name="locations" value="migration"/>
        <property name="baselineOnMigrate" value="true"/>
    </bean>

    <bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
        <property name="mergeSql" value="true"/>
        <property name="slowSqlMillis" value="10000"/>
        <property name="logSlowSql" value="true"/>

    </bean>


</beans>